//
//  ZJDataSectionOneVC.m
//  ZJAlgorithm
//
//  Created by 张君君 on 2020/3/31.
//  Copyright © 2020年 com.zhangjunjun.com. All rights reserved.
//

#import "ZJDataSectionOneVC.h"

@interface ZJDataSectionOneVC ()

@end

@implementation ZJDataSectionOneVC

- (void)viewDidLoad {
    [super viewDidLoad];
}

- (void)p_beiefIntroduce {
    /*
     数据结构:是相互之间存在一种或多种特定关系的数据元素的集合.
     */
    
    /*逻辑结构与物理结构
     按照视点的不同,我们把数据结构分为逻辑结构和物理结构
     逻辑结构:是指数据对象中数据元素之间的相关关系.逻辑结构分为以下四种.
     
     1.集合结构
     集合结构:集合结构中的数据元素除了同属于一个集合外,它们之间没有其他关系.各个数据元素是平等的.它们的共同属性是"同属于一个集合".
     数据结构中的集合关系就类似于数学中的集合.
     
     2.线性结构
     线性结构中的数据元素之间是一一对应的关系.
     
     3.树形结构
     树形结构中的数据元素之间存在一种一对多的层次关系.
     
     4.图形结构
     图形结构的数据元素是多对多的关系
     */
    
    /* 物理结构:
     数据的逻辑结构在计算机中的存储形式
     数据的存储结构应反映出数据元素之间的逻辑关系,这才是最为关键的.如何存储数据元素之间的逻辑关系,是实现物理结构的重点和难点.
     */
}

// MARK: - 物理结构
- (void)p_saveStructue {
    /* 1.顺序存储结构
     把数据元素存放在地址连续的存储单元里,其数据间的逻辑关系和物理关系是一致的.
     */
    /*2.链式存储结构
     把数据元素存放在任意的存储单元里,这组存储单元可以是连续的,也可以是不连续的.数据元素的存储关系并不能反映其逻辑关系,
     因此需要用一个指针存放数据元素的地址,这样通过地址就可以找到相关联数据元素的位置.
     */
}

// MARK: - 1.6 抽象数据类型
- (void)p_abstractDataType {
    /*1.6.1 数据类型
     一组性质相同的值的集合及定义在此集合上的一些操作的总称.
     
     在C语言中,按照取值的不同,数据类型可以分为两类:
     1.原子类型:是不可以再分解的基本类型,包括整型,实型,字符型等.
     2.结构类型:由若干个类型组合而成,是可以再分解的.例如,整型数组是由若干个整型数据组成的.
     */
    
    /*1.6.2 抽象数据类型
     抽象数据类型(Abstract Data Type,ADT):是指一个数学模型及定义在该模型上的一组操作.抽象数据类型的定义
     仅取决于它的一组逻辑特性,而与其在计算机内部如何表示和实现无关.
     
     */
}


@end
